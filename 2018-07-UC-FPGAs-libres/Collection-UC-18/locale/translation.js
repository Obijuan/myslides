// Translation document for the collection
// =======================================
// This file contains the texts
// annotated for translation
//
// Instructions:
// 1. Open the PO file with Poedit
// 2. Press "Update" to update from sources

gettext('Comb');
gettext('Const');
gettext('Varios');
gettext('Mux');
gettext('Puertas');
gettext('Tablas');
gettext('1-Bit');
gettext('2-Bits');
gettext('4-Bits');
gettext('8-Bit');
gettext('Mux-2-1-flip');
gettext('Multiplexor de 2 a 1');
gettext('Mux-2-1');
gettext('Mux-4-1-flip');
gettext('Multiplexor de 4 a 1. Implementado en verilog');
gettext('Mux-4-1');
gettext('Mux-2-1');
gettext('Multiplexor de 2 a 1 de 2 bits');
gettext('Mux-4-1');
gettext('Multiplexor de 4 a 1 de 2 bits');
gettext('Mux-2-1');
gettext('Multiplexor de 2 a 1 de 4 bits');
gettext('Mux-4-1');
gettext('Multiplexor de 4 a 1 de 4 bits');
gettext('Mux-2-1');
gettext('Multiplexor de 2 a 1 de 8 bits');
gettext('Mux-4-1');
gettext('Multiplexor de 4 a 1 de 8 bits');
gettext('and');
gettext('Puerta AND');
gettext('and3');
gettext('Puerta AND de 3 entradas');
gettext('nand');
gettext('Puerta NAND');
gettext('nor');
gettext('Puerta NOR');
gettext('not');
gettext('Puerta NOT');
gettext('or');
gettext('Puerta OR');
gettext('xnor');
gettext('Puerta XNOR');
gettext('xor');
gettext('Puerta XOR');
gettext('tabla-1-1');
gettext('Circuito combinacional de 1 entrada y 1 salida');
gettext('tabla-2-1');
gettext('Circuito combinacional de 2 entradas y 1 salida');
gettext('tabla-2-2');
gettext('Circuito combinacional de 2 entradas y 2 salida');
gettext('tabla-3-1');
gettext('Circuito combinacional de 3 entradas y 1 salida');
gettext('tabla-4-1');
gettext('Circuito combinacional de 4 entradas y 1 salida');
gettext('Bits');
gettext('Bus');
gettext('0');
gettext('Un bit constante a 0');
gettext('1');
gettext('Un bit constante a 1');
gettext('02_bits');
gettext('04_bits');
gettext('08_bits');
gettext('Generico');
gettext('Valor genérico constante, de 2 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Valor_0');
gettext('Valor constante 0 para bus de 2 bits');
gettext('Valor_1');
gettext('Valor constante 1 para bus de 2 bits');
gettext('Valor_2');
gettext('Valor constante 2 para bus de 2 bits');
gettext('Valor_3');
gettext('Valor constante 3 para bus de 2 bits');
gettext('Generico');
gettext('Valor genérico constante, de 4 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Valor_00');
gettext('Valor constante 0 para bus de 4 bits');
gettext('Valor_05');
gettext('Valor constante 5 para bus de 4 bits');
gettext('Valor_10');
gettext('Valor constante 10 para bus de 4 bits');
gettext('Valor_15');
gettext('Valor constante 15 para bus de 4 bits');
gettext('Generico');
gettext('Valor genérico constante, de 8 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Valor_000');
gettext('Valor constante 0 para bus de 8 bits');
gettext('Valor_085');
gettext('Valor constante 85 (55h) para bus de 8 bits');
gettext('Valor_170');
gettext('Valor constante 170 (AAh) para bus de 8 bits');
gettext('Valor_255');
gettext('Valor constante 255 para bus de 8 bits');
gettext('Bombeo');
gettext('Bus');
gettext('Motor');
gettext('Pegatinas');
gettext('Recreo');
gettext('Retardo');
gettext('Servos');
gettext('Fijos');
gettext('Corazon_Hz');
gettext('Corazon genérico para bombear bits a la frecuencia fijada en Hz (por defecto 1Hz)');
gettext('Corazon_Seg');
gettext('Bombear 1 bit con el periodo especificado en el parámetro. Por defecto el periodo es de 1 segundos');
gettext('Corazon_10Hz');
gettext('Bombear 10 bits por segundo');
gettext('Creado a partir de un **corazón  \ngenérico**, dando el valor adecuado  \na su parámetro frecuencia');
gettext('Corazon_1Hz');
gettext('Bombear 1 bit por segundo');
gettext('Corazon_1KHz');
gettext('Bombear 1000 bits por segundo');
gettext('Corazon_2Hz');
gettext('Bombear 2 bits por segundo');
gettext('Corazon_2KHz');
gettext('Bombear 2000 bits por segundo');
gettext('Corazon_3Hz');
gettext('Bombear 3 bits por segundo');
gettext('Corazon_4Hz');
gettext('Bombear 4 bits por segundo');
gettext('Corazon_5Hz');
gettext('Bombear 5 bits por segundo');
gettext('Corazon_7Hz');
gettext('Bombear 7 bits por segundo');
gettext('Corazon_DO4');
gettext('Bombear bits a la frecuencia del DO de la cuarta octava');
gettext('Corazon_MI4');
gettext('Bombear bits a la frecuencia del MI de la cuarta octava');
gettext('Corazon_RE4');
gettext('Bombear bits a la frecuencia del RE de la cuarta octava');
gettext('02_bits');
gettext('04_bits');
gettext('08_bits');
gettext('Agregador');
gettext('Agregador de 2 cables en un bus de 2-bits');
gettext('Separador');
gettext('Separador de bus de 2-bits en dos cables');
gettext('Agregador');
gettext('Agregador de buses de 2-bits a bus de 4-bits');
gettext('Separador');
gettext('Separador de bus de 4-bits en buses de 2 bits');
gettext('Agregador');
gettext('Agregador de 2 buses de 4-bits a bus de 8-bits');
gettext('Separador');
gettext('Separador de bus de 8-bits en buses de 4 bits');
gettext('SM-S4303R');
gettext('MotorBit');
gettext('Controlador para servo de rotacion continua SprintRC SM-S4303R. Con on=1, el motor avanza. Dir=1 sentido agujas reloj/ 0 el contrario. V1 y V2 son los pulsos para las velocidades horaria y antihoraria (en micro-sec). V0 para que esté parado');
gettext('Mux 2:1. Bus de 7 bits. ');
gettext('Mux 2:1. Bus de 4 bits. ');
gettext('Agregador de 4 cables a bus de 4bits');
gettext('Separador de bus de 4bits en 4 cables (1 + 1 + 1 + 1)');
gettext('Multiplexor 2:1 de 1-bit');
gettext('NAND logic gate');
gettext('Transistor');
gettext('Transistor cmos hecho a partir de semiconductores');
gettext('Cristal de Siicio');
gettext('Atomos de silicio');
gettext('Separador de bus de 8bits en 2 (4 + 4)');
gettext('Agregador de 2 buses de 4 a bus de 8bits');
gettext('Controlador PWM para posicionar servos de 20ms. Las unidades de pos son de 10usec');
gettext('**Velocidad 1**: Velocidad para el  \nsentido de giro horario\n');
gettext('**Velocidad 2**: Velocidad para el \nsentido de giro antirhorario');
gettext('**Entrada on/off**: Motor en  \nmovimiento o parado');
gettext('**Motorbit paramétrico** para los **SM-S4303R** o compatibles\n\nTiene 3 parámetros, especificados en micro-segundos. **V1** y **V2** son las posiciones (ancho del pulso)  \npara las velocidades de giro en sentido horario y antihorario respectivamente\n\n**V0** es la posición en la que el servo está parado (velocidad 0)\n\nPor defecto se asignan los valores para las velocidades máximas, tanto en sentido horario como antihorario\n\n* V1max = 1900\n* V2max = 1100\n* V0 = 1500');
gettext('**Velocidad en sentido horario**\n\n* Si V1 >= 1900, la velocidad es máxima\n* Si 1900 > V1 > 1500, la velocidad estará  \nentre la máxima y 0');
gettext('**Velocidad en sentido antihorario**\n\n* Si V2 <= 1100, la velocidad es máxima\n* Si 1100 < V2 < 1500, la velocidad estará  \nentre la máxima y 0');
gettext('**dir**: Sentido de giro  \n1: horario / 0: antihorario');
gettext('**Velocidad 0**: Posición para que  \nel servo esté parado');
gettext('Mux 2:1 with logic gates');
gettext('Entrada 1');
gettext('Entrada 0');
gettext('Selección');
gettext('Implementación en Verilog');
gettext('Las puertas están construidas a\npartir de transistores');
gettext('Pincha en algún transistor para\nbajar de nivel');
gettext('Nivel 3: Semiconductores');
gettext('Los transistores se crean a \npartir de uniones entre \nsemiconductores, de tipo P y N\nEstán integrados en los dados de\nsilicio en los circuitos integrados');
gettext('Pincha en el bloque para bajar de nivel');
gettext('Nivel 2: MATERIALES');
gettext('Cristal de silicio');
gettext('Los semiconductores se crean a partir de cristales\nde Silicio (Si) que se dopans con impurezas\npara darle las propiedades de semiconductores');
gettext('Pincha en los bloques para bajar de nivel');
gettext('Átomos de Silicio');
gettext('Nivel 1: ATOMOS');
gettext('Los cristales de silicio se forman a \npartir del enlace covalente entre los\nátomos de silicio. Cada uno de ellos \nestá rodeado por 4 átomos de silicio\nformando un tetraedro');
gettext('<B>Posicion del servo</B>\n\nSe especifica en unidades de 10micro-segundos\nEj. pos = 100 --> Pulso de achura 1ms');
gettext('<B>Generación de una señal PWM para posicionamiento de Servos</B>\nEl periodo es de 20ms\nEl ancho del pulso varía entre 0 - 255 (0 - 2.5ms)');
gettext('Academia-Jedi');
gettext('Emojis');
gettext('Rusia-2018');
gettext('00-Pre');
gettext('01-Primero');
gettext('02-Segundo');
gettext('00-Observador');
gettext('Rango de Observador. Pre-academia Jedi');
gettext('01-Aspirante-a-Cadete');
gettext('Rango de Aspirante a Cadete. Pre-academia Jedi');
gettext('02-Cadete');
gettext('Rango de Cadete. Primer curso');
gettext('03-Cadete-N1');
gettext('Rango de Cadete Nivel 1. Primer curso');
gettext('04-Cadete-N2');
gettext('Rango de Cadete Nivel 2. Primer curso');
gettext('05-Cadete-N3');
gettext('Rango de Cadete Nivel 3. Primer curso');
gettext('06-Aspirante-Padawan');
gettext('Rango de Aspirante a Padawan. Primer curso');
gettext('07-Aspirante-Padawan-N1');
gettext('Rango de Aspirante a Padawan Nivel 1. Primer curso');
gettext('08-Aspirante-Padawan-N2');
gettext('Rango de Aspirante a Padawan Nivel 2. Primer curso');
gettext('09-Aspirante-Padawan-N3');
gettext('Rango de Aspirante a Padawan Nivel 3. Primer curso');
gettext('10-Padawan');
gettext('Rango de Padawan. Segundo curso');
gettext('11-Padawan-N1');
gettext('Rango de Padawan Nivel 1. Segundo curso');
gettext('12-Padawan-N2');
gettext('Rango de Padawan Nivel 2. Segundo curso');
gettext('13-Padawan-N3');
gettext('Rango de Padawan Nivel 3. Segundo curso');
gettext('14-Aspirante-Jedi');
gettext('Rango de Aspirante a Jedi. Segundo curso');
gettext('15-Aspirante-Jedi-N1');
gettext('Rango de Aspirante a Jedi Nivel 1. Segundo curso');
gettext('Smiley');
gettext('Stickers de Smiley');
gettext('caca');
gettext('Caca sonriente');
gettext('like');
gettext('Like');
gettext('Rusia-2018-Balon');
gettext('Balón del Mundial de Rusia 2018');
gettext('Rusia-2018-equipos');
gettext('Equipos participanetes en el Mundial de Rusia 2018');
gettext('Rusia-2018-logo-1');
gettext('Mundial de Rusia 2018');
gettext('Rusia-2018-logo-2');
gettext('Rusia-2018-spain-1');
gettext('La roja en el Mundial de Rusia 2018');
gettext('Rusia-2018-spain-2');
gettext('Escudo de la selección Española');
gettext('Rusia-2018-spain-3');
gettext('Camiseta de la selección Española');
gettext('comecocos');
gettext('Bloque de prueba para explicar conceptos. No hace nada');
gettext('Bloque de documentación, para explicar los  \nconceptos de puertos, parámeros, pines, cables  \ny buses en el tutorial 21');
gettext('Tortuga-2');
gettext('Divisor entre dos');
gettext('Biestable T síncrono, inicializado a 0');
gettext('Biestable T síncrono, inicializado por parametro INI');
gettext('Biestable tipo D con entrada de enable, inicializado al parámetro INI');
gettext('Biestable D con inicialización paramétrica');
gettext('Generar un pulso de reloj al recibir un flanco por la entrada');
gettext('Biestable D inicializado a 0');
gettext('Delay flip-flop');
gettext('Tortuga: Divisor entre 2\n\nImplementado a partir de un\nbiestable T síncrono');
gettext('Hacer que solo responda a los flancos\nde subida de la señal de entrada');
gettext('Emax-ES08A');
gettext('Futaba-3003');
gettext('TowerPro-SG90');
gettext('ServoBit-90');
gettext('ServoBit para microservos EMAX ES08A. Controlador de 1 bit para mover el servo a 2 posiciones. El ángulo entre una posición y otra es de 90 grados');
gettext('ServoBit para microservos EMAX ES08A. Controlador de 1 bit para mover el servo a las 2 posiciones POS0 y POS1');
gettext('**Posición 1**: Posición del servo cuando  \nse introduce un 1\n\nEl valor por defecto es de 135 grados\n');
gettext('**Posición 0**: Posición del servo cuando  \nse introduce un 0\n\nEl valor por defecto es de 45 grados');
gettext('**Entrada**: posición a donde llevar  \nel servo (posición 0 ó 1)');
gettext('**Servobit paramétrico** para los microservos **EMAX-ES08A** o compatibles\n\nLos parámetros **P1** y **P0** son las posiciones asociadas a un valor de la entrada de 1 ó 0  \nEstán expresados en **micro-segundos** (usec). Este tiempo es el ancho del pulso\n\nSus **valores** deben estar comprendidos en este rango: \n\n* Extremo derecho: **580 usec**  \n* Extremo izquierdo **2550 usec**\n');
gettext('ServoBit');
gettext('Servobit-90');
gettext('ServoBit para Futaba 3003. Controlador de 1 bit para mover un servo a 2 posiciones. El ángulo entre una posición y otra es de 90 grados');
gettext('ServoBit paramétrico para Futaba 3003. Controlador de 1 bit para mover el servo a las 2 posiciones P0 y P1');
gettext('**Servobit** para Servos Futaba 3003 o comaptibles\nLas dos posiciones están distanciadas **90 grados**  \n\n* **Posicion 0**: 45 grados  \n* **Posicion 1**: 135 grados  ');
gettext('**Servobit paramétrico** para los microservos **Futaba 3003** o compatibles\n\nLos parámetros **P1** y **P0** son las posiciones asociadas a un valor de la entrada de 1 ó 0  \nEstán expresados en **micro-segundos** (usec). Este tiempo es el ancho del pulso\n\nSus **valores** deben estar comprendidos en este rango: \n\n* Extremo derecho: **380 usec**  \n* Extremo izquierdo **2410 usec**\n');
gettext('Servobit');
gettext('Servobit-90');
gettext('ServoBit para micrservo TowerPro-SG90. Controlador de 1 bit para mover un servo a 2 posiciones. El ángulo entre una posición y otra es de 90 grados');
gettext('**Servobit paramétrico** para los microservos **TowerPro SG-90** o compatibles\n\nLos parámetros **P1** y **P0** son las posiciones asociadas a un valor de la entrada de 1 ó 0  \nEstán expresados en **micro-segundos** (usec). Este tiempo es el ancho del pulso\n\nSus **valores** deben estar comprendidos en este rango: \n\n* Extremo derecho: **500 usec**  \n* Extremo izquierdo **2350 usec**\n');
gettext('Servobit');
gettext('0-Soluciones-Tutorial-21');
gettext('1-Ejemplos');
gettext('2-Ejercicios');
gettext('Sol-21-1-bloque');
gettext('Avatar de Obijuan');
gettext('**Solución ejercicio 21.1:** (5 Bitpoints) Bloque pegatina con tu avatar\n\nCrea un bloque pegatina (sin puertos) con tu avatar, logo, foto, etc. Puedes  \nusar imágenes de cualquier tamaño, sin embargo es mejor que las reduzcas  \npara que el bloque ocupe menos espacio');
gettext('Este fichero contiene la implementación del bloque  \nEn el **Sol-21-1.ice** está colocarios varios bloques para ver su aspecto  ');
gettext('Sol-21-1');
gettext('En este fichero se usan los bloques pegatina creados  \nLa implementación está en **Sol-21-1-bloque.ice**');
gettext('Sol-21-2-bloque');
gettext('Puerta AND con la apariencia del Circuit Scramble');
gettext('**Solución ejercicio 21.2:** (5 Bitpoints) Bloque AND del Circuit Scramble\n\nCrear una puerta AND, a partir de la AND que hemos usado, que tenga el  \nicono de las puertas AND del Circuit Scramble');
gettext('Este fichero contiene la **implementación del bloque** \n');
gettext('Sol-21-2');
gettext('Este fichero contiene el **circuito de pruebas** del bloque \n');
gettext('Sol-21-3-bloque');
gettext('Control de Franky');
gettext('**Solución ejercicio 21.3:** (5 Bitpoints) Bloque Franky\n\nDiseñar un bloque para controlar a Franky. Tendrá **2 puertos de entrada**  \nde un bit (además del de reloj). Uno hará que Franky dispare por sus ojos,  \ncuando se ponga a 1, y no dispare mientras esté a 0. El disparo es un  \nparpadeo de los ojos a una frecuencia definida por el usuario mediante un  \nparámetro. Por** defecto** será de **10Hz**. La otra entrada hará que Franky mire   \nhacia un lado (1) o hacia el otro (0). Tendrá como salidas un **puerto de 2 bits**  \npara los **LEDs de los ojos**, y uno de **un bit** para el **control del servo**  \ndel cuello. Tendrá un **parámetro** para especificar la frecuencia del parpadeo  \nde los ojos en el disparo');
gettext('**Implementación del bloque**');
gettext('Sol-21-3');
gettext('**Cto de pruebas del bloque**');
gettext('01-pegatinas-Rusia-2018');
gettext('**Pegatinas del mundial de Rusia 2018**');
gettext('02-pegatinas-Academia-Jedi');
gettext('# Rangos en la Academia JEDI');
gettext('## Pre-academia Jedi');
gettext('**Observador**  \nBitPoints: 0');
gettext('**Aspirante a Cadete**  \nBitPoints: 2');
gettext('**Cadete**  \nBitpoints: 5');
gettext('## Primer curso\nPara ingresar en el primer curso es necesario  \nalcanzar el **rango de Cadete** (5 Bitpoints)');
gettext('**Cadete Nivel 1**  \nBitpoints: 15');
gettext('**Cadete Nivel 2**  \nBitpoints: 25');
gettext('**Cadete Nivel 3**  \nBitpoints: 40');
gettext('**Aspirante a Padawan**  \nBitpoints: 60');
gettext('**Aspirante a Padawan Nivel 1**  \nBitpoints: 80');
gettext('**Aspirante a Padawan Nivel 2**  \nBitpoints: 100');
gettext('**Aspirante a Padawan Nivel 3**  \nBitpoints: 120');
gettext('## Segundo curso\nPara ingresar en el segundo curso es necesario  \nalcanzar el **rango de Padawan** (150 Bitpoints)');
gettext('**Padawan**  \nBitpoints: 150');
gettext('**Padawan Nivel 1**  \nBitpoints: 180');
gettext('**Padawan Nivel 2**  \nBitpoints: 210');
gettext('**Padawan Nivel 3**  \nBitpoints: 240');
gettext('**Aspirante a Jedi**  \nBitpoints: 270');
gettext('**Aspirante a Jedi Nivel 1**  \nBitpoints: 300');
gettext('03-bloques-sin-puertos-1');
gettext('Bloque2: Ejemplo de creación de un bloque sin puertos');
gettext('Bloque3: Ejemplo de creación de un bloque sin puertos con icono');
gettext('**Ejemplo de bloques sin puertos**');
gettext('# Bloque 2\n\nEjemplo de creación de un bloque sin puertos  \nSólo contiene este texto, y algunas pegatinas');
gettext('# Bloque 3\n\nEjemplo de creación de un bloque sin puertos  \nSólo contiene este texto, y algunas pegatinas\nEste bloque tiene un icono de estrella');
gettext('04-AND-3-entradas');
gettext('**Puertos de entrada**');
gettext('**Puerto de salida**');
gettext('**Puerta AND de tres entradas**');
gettext('05-Detector-2-pines');
gettext('06-Detector-2-bloque-test');
gettext('Detector del número 2');
gettext('**Ejemplo**: Probando el detector del número 2');
gettext('07-Detector-2-bus-pines');
gettext('08-Detector-2-bus-bloque-test');
gettext('Detector del número 2 (Vesión bus)');
gettext('09-Corazon-enable-pines');
gettext('Bombeo de bis a 1Hz, con entrada de habilitación');
gettext('10-Corazon-enable-test');
gettext('11-Corazon-enable-param-pines');
gettext('12-Corazon-enable-param-test');
gettext('Bombeo de bit paramétrico, con entrada de habilitación');
gettext('13-Detector-k-pines');
gettext('14-Detector-k-test');
gettext('Detector paramétrico de dos bits, del número k');
gettext('Ejercicio-21-1');
gettext('**Ejercicio 16.1**: (5 Bitpoints). **Alarma por infrarrojos**\n\nDiseñar un **circuito digital** que haga sonar una alarma mientras el **sensor de \ninfrarrojos** esté detectando un objeto. La alarma sonará por un **zumbador**, y estará  \ncompuesta por **dos tonos** de **1Khz** y **2Khz**, alternados a la frecuencia de **2Hz**\n\nCuando el sensor no detecta objetos, la alarma estará callada\n\n');
gettext('**Entregar**:\n\n  -1 Pantallazo del circuito (2 Bitpoints)\n  \n  -1 Vídeo del funcionamiento (2 Bitpoints)\n  \n  Enviarlos por redes sociales (Twitter, G+) con mención \n  a @Obijuan_cube. El vídeo puede estar en youtube o directamente en el tuit/post\n  ');
gettext('**GITHUB**:\n\n  1 Bitpoint adicional si lo entregáis por Github (sólo pantallazo, el vídeo\n  no hace falta, para que no ocupe tanto espacio)');
gettext('Ejercicio-21-x');
